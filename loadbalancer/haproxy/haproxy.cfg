global
    log "${LOGGER}:514" local0
    log /dev/log  local0
    log /dev/log  local1 notice
    user haproxy
    group haproxy
    daemon

defaults
    log global
    mode http
    timeout client "${TIMEOUT}"
    timeout server "${TIMEOUT}"
    timeout connect 5s

listen stats
    bind "${LISTEN}:81"
    stats "${STATS}"
    # http-request rejeitar if { src -f "${ABUSERS}" }
    stats hide-version
    stats refresh 30s
    stats show-node
    stats auth "${STATSLP}"
    stats uri "${STATSURI}"
    stats show-desc "${STATSSHOW}"

listen kubernetes-apiserver-https
    bind "${LISTEN}:6443"
    mode tcp
    option log-health-checks
    timeout client 3h
    timeout server 3h
    balance roundrobin
    server K8S_M01 "${SERVER}.11:${PORT_K8S}" check check-ssl verify none inter 2000

frontend web-demo
    mode http
    bind "${LISTEN}:80"
    capture request header Host len 200
    option forwardfor
    
    
    #----------------------------
    # Config Demo ACL Argocd
    #----------------------------

    acl dns_argocd hdr(host) -i argocd.lab.k8s.io

    acl path_argocd path_beg -i /
    use_backend back_argocd if dns_argocd path_argocd

    #----------------------------
    # SQUAD A: Aplication Nginx
    #----------------------------

    # Path por ambiente

    acl dns_app_nginx hdr(host) -i squad.a.nginx.lab.k8s.io

    # Config Demo ACL App Ambiente DEV
    acl path_app_nginx_dev path_beg -i /dev
    use_backend back_app_nginx_dev if dns_app_nginx path_app_nginx_dev

    # Config Demo ACL App Ambiente HOM
    acl path_app_nginx_hom path_beg -i /hom
    use_backend back_app_nginx_hom if dns_app_nginx path_app_nginx_hom

    # Config Demo ACL App Ambiente PROD
    acl path_app_nginx_prod path_beg -i /prod
    use_backend back_app_nginx_prod if dns_app_nginx path_app_nginx_prod

    #----------------------------
    # SQUAD A: Aplication GO
    #----------------------------

    # DNS por ambiente
    acl dns_app_go_dev hdr(host) -i ws.dev.squad.a.go.lab.k8s.io
    acl dns_app_go_hom hdr(host) -i ws.hom.squad.a.go.lab.k8s.io
    acl dns_app_go hdr(host) -i ws.squad.a.go.lab.k8s.io

    # Config Demo ACL App Ambiente DEV
    acl path_app_go_dev path_beg -i /
    use_backend back_app_go_dev if dns_app_go_dev path_app_go_dev

    # Config Demo ACL App Ambiente HOM
    acl path_app_go_hom path_beg -i /
    use_backend back_app_go_hom if dns_app_go_hom path_app_go_hom

    # Config Demo ACL App Ambiente PROD
    acl path_app_go path_beg -i /
    use_backend back_app_go_prod if dns_app_go path_app_go

backend back_argocd
    mode http
    balance leastconn
    http-request set-header Host argocd.lab.k8s.io
    server RR_K8S "${SERVER}.41:${HTTP_INGRESS_ISTIO}" check 

#--------------------------------------
# BACKEND APPS NGINX
#--------------------------------------

backend back_app_nginx_dev
    mode http
    balance leastconn
    server RR_K8S "${SERVER}.41:${HTTP_INGRESS_ISTIO}" check 

backend back_app_nginx_hom
    mode http
    balance leastconn
    server RR_K8S "${SERVER}.41:${HTTP_INGRESS_ISTIO}" check 

backend back_app_nginx_prod
    mode http
    balance leastconn
    server RR_K8S "${SERVER}.41:${HTTP_INGRESS_ISTIO}" check 

#--------------------------------------
# BACKEND APPS GO
#--------------------------------------

backend back_app_go_dev
    mode http
    balance leastconn
    http-request set-header Host demo.app.lab.k8s.io
    server RR_K8S "${SERVER}.41:${HTTP_INGRESS_ISTIO}" check 

backend back_app_go_hom
    mode http
    balance leastconn
    http-request set-header Host demo.app.lab.k8s.io
    server RR_K8S "${SERVER}.41:${HTTP_INGRESS_ISTIO}" check 

backend back_app_go_prod
    mode http
    balance leastconn
    http-request set-header Host demo.app.lab.k8s.io
    server RR_K8S "${SERVER}.41:${HTTP_INGRESS_ISTIO}" check 
